<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on knapply()</title>
    <link>/tags/python/</link>
    <description>Recent content in python on knapply()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Brendan Knapp</copyright>
    <lastBuildDate>Mon, 12 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Central Tendency</title>
      <link>/post/central-tendency/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/central-tendency/</guid>
      <description>MeanMean--R----Rcpp----C++----Python----NumPy--
r_vector &amp;lt;- c(126, 793, 999, 525, 851, 798, 120, 714, 852, 151,190, 41, 612, 826, 507, 105, 14, 237, 669, 7)mean(r_vector)#&amp;gt; [1] 456.</description>
    </item>
    
    <item>
      <title>Describing Data</title>
      <link>/post/describing-data/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/describing-data/</guid>
      <description>Length/SizeMinimum and Maximum ValuesSumLength/Size--R----Rcpp----C++----Python----NumPy--
r_vector &amp;lt;- c(126, 793, 999, 525, 851, 798, 120, 714, 852, 151, 190, 41, 612, 826, 507, 105, 14, 237, 669, 7)r_vector#&amp;gt; [1] 126 793 999 525 851 798 120 714 852 151 190 41 612 826 507 105 14 237 669 7length(r_vector)#&amp;gt; [1] 20#include &amp;lt;Rcpp.</description>
    </item>
    
    <item>
      <title>Standard Deviation</title>
      <link>/post/standard-deviation/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/standard-deviation/</guid>
      <description>PurposeEquationsBy HandPurposeQuantify amount of variation/spread/dispersion of values.
Equations\(\sigma_x = \sqrt{ \frac{\sum(x - \mu_x)^2} {N-1} }\)
\(\sigma_x = sqrt({ \frac{sum(~(x - mean(x)~)^2} {(N-1)}})\)
\(numerator = sum(~(x-mean(x)~)^2\)
\(mean = \frac {sum(x)} {length(x)}\)
By Hand--R----Rcpp----C++----NumPy--</description>
    </item>
    
    <item>
      <title>Foundational Programming</title>
      <link>/post/foundational-programming/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/foundational-programming/</guid>
      <description>From ScratchBuilt-inFrom Scratch--R----Rcpp----C++----Python--
r_length &amp;lt;- function(x) {out &amp;lt;- 0Lfor (i in x) {out &amp;lt;- out + 1L}out}r_vector &amp;lt;- 1:20r_vector#&amp;gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20r_length(r_vector)#&amp;gt; [1] 20#include &amp;lt;Rcpp.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/post/functions/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/functions/</guid>
      <description>Define doubler_*() FunctionRun doubler_*() FunctionCitation and \(\normalsize{\textrm B} \scriptsize{\textrm{IB}} \normalsize{\TeX}\)Define doubler_*() Functionr_doubler &amp;lt;- function(x) {x * 2}def py_doubler(x):return x * 2#include &amp;lt;Rcpp.h&amp;gt;// [[Rcpp::export]]int cpp_doubler(int x) {return x * 2;}Run doubler_*() Functionr_doubler(x = 4)## [1] 8print(py_doubler(x = 4))## 8cpp_doubler(x = 4)## [1] 8Citation and \(\normalsize{\textrm B} \scriptsize{\textrm{IB}} \normalsize{\TeX}\)Knapp, B.</description>
    </item>
    
    <item>
      <title>R-Python Thesaurus</title>
      <link>/post/r-python-thesaurus/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-python-thesaurus/</guid>
      <description>TypesCollections: Vectors, Lists, and DictionariesCommon TasksIterationPythonRSequencesComparisonsArithmeticStatisticsDates and TimesStrings and Regular ExpressionsTypesPython TypePython ExampleR TypeR Exampleint1integer1Lfloat3.14numeric &amp;amp; double3.14string‘hi’character“hi”boolTruelogicalTRUECollections: Vectors, Lists, and DictionariesPython TypePython ExampleR TypeR ExampleValuesscalar1vector1homogeneouslist[1, 1]vectorc(1, 2)homogeneouslist[1, ‘string’]listlist(1, “string”)heterogenoustuple(1, ‘string’]listlist(1, “string”)heterogenousdict{‘a’:1, ‘b’:‘string’}listlist(a = 1, b = “string”)heterogenousvectorc(a = 1, b = 2)homogeneousNote:  dicts are not ordered.</description>
    </item>
    
  </channel>
</rss>