<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on knapply()</title>
    <link>/categories/programming/</link>
    <description>Recent content in programming on knapply()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Brendan Knapp</copyright>
    <lastBuildDate>Fri, 23 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mode</title>
      <link>/post/mode/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/mode/</guid>
      <description>What is it?RBase RRcppBlueprintTemplatedPythonPure PythonNumPyNumbaParallelCuPyShootoutEnvironmentThis post was last updated on 2018-11-30.
What is it?Given a sequence, the mode is the value with the highest number of occurrences.
Stepsfind the unique valuescount the number of occurrences of each valuethe mode is the value with the highest number of occurrencesRBase Rr_mode &amp;lt;- function(x) {uniques &amp;lt;- x[!</description>
    </item>
    
    <item>
      <title>Describing Data</title>
      <link>/post/describing-data/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/describing-data/</guid>
      <description>Length/SizeMinimum and Maximum ValuesUnique ValuesSum$(function(){var hash = document.location.hash;if (hash) {$(&#39;.navbar-nav a[href=&#34;&#39; + hash + &#39;&#34;]&#39;).tab(&#39;show&#39;);}$(&#39;a[data-toggle=&#34;tab&#34;]&#39;).on(&#39;click&#39;, function (e) {history.pushState(null, null, $(this).attr(&#39;href&#39;));});});Length/Size--R----Rcpp----C++----Python----NumPy--</description>
    </item>
    
    <item>
      <title>Foundational Programming</title>
      <link>/post/foundational-programming/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/foundational-programming/</guid>
      <description>From ScratchBuilt-inFrom Scratch--R----Rcpp----C++----Python--
foundational-programming/r-length1.R r_length &amp;lt;- function(x) {out &amp;lt;- 0Lfor (i in x) {out &amp;lt;- out + 1L}out}r_vector &amp;lt;- 1:20r_vector#&amp;gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20r_length(r_vector)#&amp;gt; [1] 20foundational-programming/rcpp-length1.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/post/functions/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/functions/</guid>
      <description>Define doubler_*() FunctionRun doubler_*() FunctionCitation and \(\normalsize{\textrm B} \scriptsize{\textrm{IB}} \normalsize{\TeX}\)Define doubler_*() Functionr_doubler &amp;lt;- function(x) {x * 2}def py_doubler(x):return x * 2#include &amp;lt;Rcpp.h&amp;gt;// [[Rcpp::export]]int cpp_doubler(int x) {return x * 2;}Run doubler_*() Functionr_doubler(x = 4)## [1] 8print(py_doubler(x = 4))## 8cpp_doubler(x = 4)## [1] 8Citation and \(\normalsize{\textrm B} \scriptsize{\textrm{IB}} \normalsize{\TeX}\)Knapp, B.</description>
    </item>
    
  </channel>
</rss>